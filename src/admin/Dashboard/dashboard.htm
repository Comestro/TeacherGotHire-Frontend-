import React, { useState } from 'react';
import {
  Box,
  Grid,
  Paper,
  Typography,
  Button,
  Card,
  CardContent,
  Divider,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Avatar,
  IconButton,
  Chip,
  Switch,
  useTheme,
  useMediaQuery,
  Tab,
  Tabs,
} from '@mui/material';
import {
  Dashboard as DashboardIcon,
  People as PeopleIcon,
  School as SchoolIcon,
  WorkOutline as JobIcon,
  CalendarToday as CalendarIcon,
  Assessment as AssessmentIcon,
  TrendingUp as TrendingUpIcon,
  CheckCircle as CheckCircleIcon,
  Schedule as ScheduleIcon,
  Notifications as NotificationsIcon,
  Mail as MailIcon,
  Settings as SettingsIcon,
  Brightness4 as DarkModeIcon,
  Brightness7 as LightModeIcon,
  AccountCircle as AccountIcon,
  KeyboardArrowRight as ArrowRightIcon,
  Timeline as TimelineIcon,
  BarChart as BarChartIcon,
  PieChart as PieChartIcon,
  ShowChart as ShowChartIcon,
  Category,
  MenuBook,
  Psychology,
  Grade,
  WorkspacePremium,
  Quiz,
  BusinessCenter,
  Key,
  VideoCall,
  AssignmentInd,
  NotificationImportant,
  SupervisorAccount,
  QuestionAnswer as QuestionAnswerIcon,
  LocationOn,
} from '@mui/icons-material';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  BarElement,
  Title,
  ArcElement,
  Tooltip,
  Legend
} from 'chart.js';
import { Line, Bar, Doughnut } from 'react-chartjs-2';
import Layout from '../Admin/Layout';

// ... existing code ...

export default function AdminDashboard() {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));
  const isTablet = useMediaQuery(theme.breakpoints.down('md'));
  const [darkMode, setDarkMode] = useState(false);
  const [chartTab, setChartTab] = useState(0);

  // ... existing code ...

  // Adding quick action items based on menu items
  const quickActions = [
    { icon: <SchoolIcon />, text: "Teachers", color: "#ff9800", link: "/admin/manage/teacher" },
    { icon: <SupervisorAccount />, text: "Recruiters", color: "#2196f3", link: "/admin/manage/recruiter" },
    { icon: <BusinessCenter />, text: "Hiring", color: "#9c27b0", link: "/admin/manage/hiring" },
    { icon: <VideoCall />, text: "Interviews", color: "#f44336", link: "/admin/manage/interview" },
    { icon: <Quiz />, text: "Exams", color: "#4caf50", link: "/admin/manage/exam" },
    { icon: <MenuBook />, text: "Subjects", color: "#607d8b", link: "/admin/manage/subject" },
    { icon: <Category />, text: "Categories", color: "#795548", link: "/admin/manage/class/category" },
    { icon: <Key />, text: "Passkeys", color: "#009688", link: "/admin/manage/passkey" },
  ];

  return (
    <Layout>
      <Box sx={{
        flexGrow: 1,
        p: { xs: 1, sm: 2, md: 3 },
        backgroundColor: darkMode ? '#121212' : '#f5f5f5',
        minHeight: '100vh',
        color: darkMode ? '#fff' : '#333',
        transition: 'all 0.3s ease',
        overflow: 'hidden', // Prevent horizontal overflow
        width: '100%',
        maxWidth: '100%'
      }}>
        {/* Header */}
        <Box sx={{
          display: 'flex',
          flexDirection: isMobile ? 'column' : 'row',
          justifyContent: 'space-between',
          mb: 3,
          alignItems: isMobile ? 'flex-start' : 'center',
          width: '100%',
          overflow: 'hidden'
        }}>
          <Box>
            <Typography variant={isMobile ? "h5" : "h4"} fontWeight="bold" color={darkMode ? 'primary.light' : 'primary.dark'} noWrap>
              Admin Dashboard
            </Typography>
          </Box>
          <Box sx={{
            display: 'flex',
            alignItems: 'center',
            gap: 1,
            mt: isMobile ? 2 : 0,
            width: isMobile ? '100%' : 'auto',
            justifyContent: isMobile ? 'space-between' : 'flex-end'
          }}>
            <IconButton color="inherit" onClick={() => setDarkMode(!darkMode)}>
              {darkMode ? <LightModeIcon /> : <DarkModeIcon />}
            </IconButton>
          </Box>
        </Box>

        {/* ... existing Quick Stats Summary ... */}

        {/* KPI & Analytics Overview - with overflow control */}
        <Typography variant="h6" sx={{ mb: 2, fontWeight: 500 }}>
          Analytics Overview
        </Typography>
        <Box sx={{ width: '100%', overflowX: 'hidden' }}>
          <Grid container spacing={isMobile ? 2 : 3} sx={{ mb: 4 }}>
            {/* ... existing grid items ... */}
          </Grid>
        </Box>

        {/* Quick Actions Panel - Improved for more items */}
        <Typography variant="h6" sx={{ mb: 2, mt: 4, fontWeight: 500 }}>
          Quick Actions
        </Typography>
        <Box sx={{ width: '100%', overflowX: 'hidden' }}>
          <Grid container spacing={isMobile ? 1 : 2} sx={{ mb: 4 }}>
            {quickActions.map((action, index) => (
              <Grid item xs={6} sm={4} md={3} lg={3} xl={2} key={index}>
                <Button
                  variant="outlined"
                  sx={{
                    display: 'flex',
                    flexDirection: 'column',
                    justifyContent: 'center',
                    alignItems: 'center',
                    height: { xs: 80, sm: 100 },
                    width: '100%',
                    textTransform: 'none',
                    borderRadius: 2,
                    border: `1px solid ${darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'}`,
                    backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'white',
                    color: darkMode ? 'white' : '#333',
                    transition: 'transform 0.2s, box-shadow 0.2s',
                    '&:hover': {
                      transform: 'translateY(-3px)',
                      boxShadow: '0 4px 20px rgba(0,0,0,0.1)',
                      backgroundColor: darkMode ? 'rgba(255,255,255,0.1)' : 'white',
                    }
                  }}
                >
                  <Box sx={{
                    color: action.color,
                    p: { xs: 0.5, sm: 1 },
                    borderRadius: '50%',
                    mb: { xs: 0.5, sm: 1 }
                  }}>
                    {action.icon}
                  </Box>
                  <Typography 
                    variant={isMobile ? "caption" : "body2"} 
                    textAlign="center"
                    sx={{ 
                      display: '-webkit-box',
                      overflow: 'hidden',
                      textOverflow: 'ellipsis',
                      WebkitLineClamp: 1,
                      WebkitBoxOrient: 'vertical'
                    }}
                  >
                    {action.text}
                  </Typography>
                </Button>
              </Grid>
            ))}
          </Grid>
        </Box>

        {/* Analytics Charts - with improved responsiveness */}
        <Typography variant="h6" sx={{ mb: 2, mt: 4, fontWeight: 500 }}>
          Analytics & Growth
        </Typography>
        <Paper
          elevation={3}
          sx={{
            borderRadius: 2,
            overflow: 'hidden',
            backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'white',
            p: 2,
            maxWidth: '100%'
          }}
        >
          <Box sx={{ width: '100%', overflowX: 'auto', pb: 1 }}>
            <Tabs
              value={chartTab}
              onChange={handleChartTabChange}
              variant={isMobile ? "scrollable" : "standard"}
              sx={{ mb: 2 }}
              scrollButtons="auto"
              allowScrollButtonsMobile
            >
              <Tab
                icon={<ShowChartIcon />}
                label={isMobile ? undefined : "Growth"}
                iconPosition={isMobile ? "top" : "start"}
              />
              <Tab
                icon={<BarChartIcon />}
                label={isMobile ? undefined : "Jobs"}
                iconPosition={isMobile ? "top" : "start"}
              />
              <Tab
                icon={<PieChartIcon />}
                label={isMobile ? undefined : "Distribution"}
                iconPosition={isMobile ? "top" : "start"}
              />
            </Tabs>
          </Box>

          <Box sx={{ 
            height: { xs: 250, sm: 300, md: 350 }, 
            mt: 2, 
            width: '100%', 
            overflow: 'hidden',
            maxWidth: '100%'
          }}>
            {chartTab === 0 && (
              <Line options={{
                ...chartOptions,
                responsive: true,
                maintainAspectRatio: false,
              }} data={mockData.chartData.signups} />
            )}
            {chartTab === 1 && (
              <Bar options={{
                ...chartOptions,
                responsive: true,
                maintainAspectRatio: false,
              }} data={mockData.chartData.jobsData} />
            )}
            {chartTab === 2 && (
              <Box sx={{
                display: 'flex',
                flexDirection: isMobile ? 'column' : 'row',
                height: '100%',
                maxWidth: '100%'
              }}>
                <Box sx={{
                  height: isMobile ? '200px' : '100%',
                  width: isMobile ? '100%' : '50%',
                  position: 'relative',
                  maxWidth: '100%'
                }}>
                  <Doughnut
                    data={mockData.chartData.recruiterTypes}
                    options={{
                      responsive: true,
                      maintainAspectRatio: false,
                      plugins: {
                        legend: {
                          position: isMobile ? 'bottom' : 'right',
                          labels: {
                            color: darkMode ? '#fff' : '#333',
                            boxWidth: isMobile ? 10 : 15,
                            padding: isMobile ? 8 : 12
                          }
                        }
                      }
                    }}
                  />
                </Box>
                <Box sx={{
                  width: isMobile ? '100%' : '50%',
                  p: 2,
                  display: 'flex',
                  flexDirection: 'column',
                  justifyContent: 'center',
                  maxWidth: '100%'
                }}>
                  <Typography variant="h6" fontWeight="medium" noWrap>Recruiter Distribution</Typography>
                  <Typography 
                    variant="body2" 
                    color="text.secondary" 
                    sx={{ 
                      mb: 2,
                      overflow: 'hidden',
                      textOverflow: 'ellipsis'
                    }}
                  >
                    Schools make up {Math.round(mockData.recruiters.schools / mockData.recruiters.total * 100)}% of our recruiter base
                  </Typography>
                  <Box sx={{
                    display: 'flex',
                    flexDirection: 'column',
                    gap: 1
                  }}>
                    {[
                      { type: 'Schools', count: mockData.recruiters.schools, color: 'rgba(54, 162, 235, 0.7)' },
                      { type: 'Institutes', count: mockData.recruiters.institutes, color: 'rgba(255, 159, 64, 0.7)' },
                      { type: 'Individual', count: mockData.recruiters.individual, color: 'rgba(255, 99, 132, 0.7)' }
                    ].map((item, index) => (
                      <Box key={index} sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                        <Box sx={{ width: 12, height: 12, backgroundColor: item.color, borderRadius: 1, flexShrink: 0 }} />
                        <Typography variant="body2" noWrap>
                          {item.type}: <strong>{item.count}</strong>
                        </Typography>
                      </Box>
                    ))}
                  </Box>
                </Box>
              </Box>
            )}
          </Box>

          <Box sx={{
            textAlign: 'right',
            pt: 2,
            mt: 2,
            borderTop: '1px solid',
            borderColor: darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'
          }}>
            <Button
              color="primary"
              variant="contained"
              startIcon={<AssessmentIcon />}
              size={isMobile ? "small" : "medium"}
            >
              Full Analytics Report
            </Button>
          </Box>
        </Paper>

        {/* Additional Widgets Panel */}
        <Typography variant="h6" sx={{ mb: 2, mt: 4, fontWeight: 500 }}>
          Key Insights
        </Typography>
        <Grid container spacing={2} sx={{ mb: 4 }}>
          {/* Recent Teachers */}
          <Grid item xs={12} md={6}>
            <Paper
              elevation={2}
              sx={{
                borderRadius: 2,
                overflow: 'hidden',
                backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'white',
                height: '100%'
              }}
            >
              <Box sx={{ p: 2, borderBottom: `1px solid ${darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'}` }}>
                <Typography variant="h6" sx={{ fontWeight: 500, display: 'flex', alignItems: 'center' }}>
                  <PeopleIcon sx={{ mr: 1, fontSize: 20 }} /> Recent Teachers
                </Typography>
              </Box>
              <List sx={{ overflow: 'hidden', maxWidth: '100%' }}>
                {[
                  { name: "Michael Johnson", subject: "Mathematics", date: "12 Mar 2025", status: "pending" },
                  { name: "Emma Rodriguez", subject: "English Literature", date: "11 Mar 2025", status: "approved" },
                  { name: "David Chen", subject: "Physics", date: "10 Mar 2025", status: "active" },
                ].map((teacher, index) => (
                  <ListItem 
                    key={index}
                    divider={index !== 2}
                    secondaryAction={
                      <Chip 
                        size="small"
                        label={teacher.status}
                        sx={{ 
                          bgcolor: getStatusColor(teacher.status),
                          color: 'white',
                          maxWidth: { xs: '70px', sm: 'none' },
                          '& .MuiChip-label': {
                            overflow: 'hidden',
                            textOverflow: 'ellipsis'
                          }
                        }}
                      />
                    }
                    sx={{ pr: 8 }} // Ensure space for the action
                  >
                    <ListItemIcon>
                      <Avatar sx={{ bgcolor: darkMode ? 'primary.dark' : 'primary.light' }}>
                        {teacher.name.charAt(0)}
                      </Avatar>
                    </ListItemIcon>
                    <ListItemText 
                      primary={teacher.name}
                      primaryTypographyProps={{ 
                        noWrap: true,
                        sx: { maxWidth: { xs: '120px', sm: '200px', md: '250px' } }
                      }}
                      secondary={teacher.subject}
                      secondaryTypographyProps={{ 
                        noWrap: true,
                        sx: { maxWidth: { xs: '120px', sm: '200px', md: '250px' } }
                      }}
                    />
                  </ListItem>
                ))}
              </List>
            </Paper>
          </Grid>

          {/* Upcoming Interviews */}
          <Grid item xs={12} md={6}>
            <Paper
              elevation={2}
              sx={{
                borderRadius: 2,
                overflow: 'hidden',
                backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'white',
                height: '100%'
              }}
            >
              <Box sx={{ p: 2, borderBottom: `1px solid ${darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'}` }}>
                <Typography variant="h6" sx={{ fontWeight: 500, display: 'flex', alignItems: 'center' }}>
                  <VideoCall sx={{ mr: 1, fontSize: 20 }} /> Upcoming Interviews
                </Typography>
              </Box>
              <List sx={{ overflow: 'hidden', maxWidth: '100%' }}>
                {[
                  { teacher: "Sarah Johnson", school: "Westfield High", position: "Science Teacher", time: "Tomorrow, 10:00 AM", status: "upcoming" },
                  { teacher: "Robert Williams", school: "Lincoln Elementary", position: "Art Teacher", time: "12 Mar, 2:30 PM", status: "upcoming" },
                  { teacher: "Jessica Brown", school: "Oakridge Institute", position: "Math Teacher", time: "15 Mar, 11:00 AM", status: "scheduled" },
                ].map((interview, index) => (
                  <ListItem 
                    key={index}
                    divider={index !== 2}
                    secondaryAction={
                      <Chip 
                        size="small"
                        icon={<ScheduleIcon sx={{ fontSize: '1rem !important' }} />}
                        label={interview.time}
                        sx={{ 
                          maxWidth: { xs: '100px', sm: 'auto' },
                          '& .MuiChip-label': {
                            overflow: 'hidden',
                            textOverflow: 'ellipsis',
                            pr: { xs: 0, sm: 1 }
                          }
                        }}
                      />
                    }
                    sx={{ pr: 9 }} // Ensure space for the action
                  >
                    <ListItemIcon>
                      <Avatar sx={{ bgcolor: getStatusColor(interview.status) }}>
                        {interview.teacher.charAt(0)}
                      </Avatar>
                    </ListItemIcon>
                    <ListItemText 
                      primary={interview.teacher}
                      primaryTypographyProps={{ 
                        noWrap: true,
                        sx: { maxWidth: { xs: '120px', sm: '200px', md: '250px' } }
                      }}
                      secondary={`${interview.position} - ${interview.school}`}
                      secondaryTypographyProps={{ 
                        noWrap: true,
                        sx: { maxWidth: { xs: '120px', sm: '200px', md: '250px' } }
                      }}
                    />
                  </ListItem>
                ))}
              </List>
            </Paper>
          </Grid>
        </Grid>

        {/* Upcoming Tasks/Important Reminders - Mobile Focused */}
        {isMobile && (
          <Box sx={{ mt: 3, width: '100%', overflowX: 'hidden' }}>
            <Typography variant="h6" sx={{ mb: 2, fontWeight: 500 }}>
              Important Reminders
            </Typography>
            <Paper
              elevation={2}
              sx={{
                borderRadius: 2,
                p: 2,
                backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'white',
                maxWidth: '100%'
              }}
            >
              <List dense disablePadding>
                <ListItem>
                  <ListItemIcon>
                    <Avatar sx={{ bgcolor: '#ff9800', width: 28, height: 28 }}>
                      <PeopleIcon fontSize="small" />
                    </Avatar>
                  </ListItemIcon>
                  <ListItemText
                    primary="Approve new teachers (37)"
                    secondary="Action needed within 24 hours"
                    primaryTypographyProps={{ noWrap: true }}
                    secondaryTypographyProps={{ noWrap: true }}
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon>
                    <Avatar sx={{ bgcolor: '#2196f3', width: 28, height: 28 }}>
                      <CalendarIcon fontSize="small" />
                    </Avatar>
                  </ListItemIcon>
                  <ListItemText
                    primary="Next interview: Tomorrow, 10:00 AM"
                    secondary="Sarah Johnson - Science Teacher"
                    primaryTypographyProps={{ noWrap: true }}
                    secondaryTypographyProps={{ noWrap: true }}
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon>
                    <Avatar sx={{ bgcolor: '#4caf50', width: 28, height: 28 }}>
                      <AssessmentIcon fontSize="small" />
                    </Avatar>
                  </ListItemIcon>
                  <ListItemText
                    primary="Publish exam results"
                    secondary="Physics Proficiency Test"
                    primaryTypographyProps={{ noWrap: true }}
                    secondaryTypographyProps={{ noWrap: true }}
                  />
                </ListItem>
              </List>
            </Paper>
          </Box>
        )}
      </Box>
    </Layout>
  );
}